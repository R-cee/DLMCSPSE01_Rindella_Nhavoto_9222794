{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./AdminIntegrations.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminIntegrations=()=>{const[integrations,setIntegrations]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[editIntegration,setEditIntegration]=useState(null);// Fetch integration settings\nuseEffect(()=>{const fetchIntegrations=async()=>{try{const response=await fetch('/admin/integrations',{method:'GET',headers:{'Content-Type':'application/json'}});console.log('API response status:',response.status);// Debugging\nif(response.ok){const data=await response.json();console.log('Integration data:',data);// Debugging\nsetIntegrations(data);}else{const errorData=await response.json();setError(errorData.error);}}catch(error){console.error('Error fetching integrations:',error);// Debugging\nsetError('Failed to fetch integrations. Please try again later.');}finally{setIsLoading(false);}};fetchIntegrations();},[]);const handleEditClick=integration=>{setEditIntegration(integration);};const handleInputChange=e=>{const{name,value}=e.target;setEditIntegration({...editIntegration,[name]:value});};const handleSaveClick=async()=>{try{const response=await fetch(`/admin/integrations/${editIntegration.integration_id}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({api_key:editIntegration.api_key,status:editIntegration.status})});if(response.ok){// Update the list with the new changes\nsetIntegrations(prevIntegrations=>prevIntegrations.map(integration=>integration.integration_id===editIntegration.integration_id?editIntegration:integration));setEditIntegration(null);// Exit edit mode\n}else{const errorData=await response.json();setError(errorData.error);}}catch(error){console.error('Failed to update integration:',error);// Debugging\nsetError('Failed to update integration. Please try again later.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-integrations-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Manage Integrations\"}),isLoading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading integrations...\"}):error?/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[integrations.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No integrations available.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"integration-cards\",children:integrations.map(integration=>/*#__PURE__*/_jsx(\"div\",{className:\"integration-card\",children:editIntegration&&editIntegration.integration_id===integration.integration_id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Provider:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:integration.provider,disabled:true}),/*#__PURE__*/_jsx(\"label\",{children:\"API Key:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"api_key\",value:editIntegration.api_key,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{children:\"Status:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"status\",value:editIntegration.status,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Active\",children:\"Active\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Inactive\",children:\"Inactive\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveClick,children:\"Save\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Provider:\"}),\" \",integration.provider]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"API Key:\"}),\" \",integration.api_key]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",integration.status]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditClick(integration),children:\"Edit\"})]})},integration.integration_id))})]})]});};export default AdminIntegrations;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminIntegrations","integrations","setIntegrations","isLoading","setIsLoading","error","setError","editIntegration","setEditIntegration","fetchIntegrations","response","fetch","method","headers","console","log","status","ok","data","json","errorData","handleEditClick","integration","handleInputChange","e","name","value","target","handleSaveClick","integration_id","body","JSON","stringify","api_key","prevIntegrations","map","className","children","length","type","provider","disabled","onChange","onClick"],"sources":["C:/Users/Rindella Nhavoto/Desktop/ProjectsVSC/SWEproject/events-system-frontend/src/components/AdminIntegrations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AdminIntegrations.css';\r\n\r\nconst AdminIntegrations = () => {\r\n  const [integrations, setIntegrations] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [editIntegration, setEditIntegration] = useState(null);\r\n\r\n  // Fetch integration settings\r\n  useEffect(() => {\r\n    const fetchIntegrations = async () => {\r\n      try {\r\n        const response = await fetch('/admin/integrations', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        console.log('API response status:', response.status); // Debugging\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log('Integration data:', data); // Debugging\r\n          setIntegrations(data);\r\n        } else {\r\n          const errorData = await response.json();\r\n          setError(errorData.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching integrations:', error); // Debugging\r\n        setError('Failed to fetch integrations. Please try again later.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchIntegrations();\r\n  }, []);\r\n\r\n  const handleEditClick = (integration) => {\r\n    setEditIntegration(integration);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditIntegration({\r\n      ...editIntegration,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSaveClick = async () => {\r\n    try {\r\n      const response = await fetch(`/admin/integrations/${editIntegration.integration_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          api_key: editIntegration.api_key,\r\n          status: editIntegration.status,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Update the list with the new changes\r\n        setIntegrations((prevIntegrations) =>\r\n          prevIntegrations.map((integration) =>\r\n            integration.integration_id === editIntegration.integration_id\r\n              ? editIntegration\r\n              : integration\r\n          )\r\n        );\r\n        setEditIntegration(null); // Exit edit mode\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update integration:', error); // Debugging\r\n      setError('Failed to update integration. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-integrations-page\">\r\n      <h1>Manage Integrations</h1>\r\n      {isLoading ? (\r\n        <p>Loading integrations...</p>\r\n      ) : error ? (\r\n        <p className=\"error-message\">{error}</p>\r\n      ) : (\r\n        <>\r\n          {integrations.length === 0 && <p>No integrations available.</p>}\r\n          <div className=\"integration-cards\">\r\n            {integrations.map((integration) => (\r\n              <div key={integration.integration_id} className=\"integration-card\">\r\n                {editIntegration && editIntegration.integration_id === integration.integration_id ? (\r\n                  <>\r\n                    <label>Provider:</label>\r\n                    <input type=\"text\" value={integration.provider} disabled />\r\n\r\n                    <label>API Key:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"api_key\"\r\n                      value={editIntegration.api_key}\r\n                      onChange={handleInputChange}\r\n                    />\r\n\r\n                    <label>Status:</label>\r\n                    <select\r\n                      name=\"status\"\r\n                      value={editIntegration.status}\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"Active\">Active</option>\r\n                      <option value=\"Inactive\">Inactive</option>\r\n                    </select>\r\n\r\n                    <button onClick={handleSaveClick}>Save</button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <p>\r\n                      <strong>Provider:</strong> {integration.provider}\r\n                    </p>\r\n                    <p>\r\n                      <strong>API Key:</strong> {integration.api_key}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Status:</strong> {integration.status}\r\n                    </p>\r\n                    <button onClick={() => handleEditClick(integration)}>Edit</button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminIntegrations;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEjC,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACe,eAAe,CAAEC,kBAAkB,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAE5D;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qBAAqB,CAAE,CAClDC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEL,QAAQ,CAACM,MAAM,CAAC,CAAE;AAEtD,GAAIN,QAAQ,CAACO,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClCL,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEG,IAAI,CAAC,CAAE;AACxChB,eAAe,CAACgB,IAAI,CAAC,CACvB,CAAC,IAAM,CACL,KAAM,CAAAE,SAAS,CAAG,KAAM,CAAAV,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvCb,QAAQ,CAACc,SAAS,CAACf,KAAK,CAAC,CAC3B,CACF,CAAE,MAAOA,KAAK,CAAE,CACdS,OAAO,CAACT,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CAAE;AACtDC,QAAQ,CAAC,uDAAuD,CAAC,CACnE,CAAC,OAAS,CACRF,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDK,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAY,eAAe,CAAIC,WAAW,EAAK,CACvCd,kBAAkB,CAACc,WAAW,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAIC,CAAC,EAAK,CAC/B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCnB,kBAAkB,CAAC,CACjB,GAAGD,eAAe,CAClB,CAACkB,IAAI,EAAGC,KACV,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAE,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uBAAuBJ,eAAe,CAACsB,cAAc,EAAE,CAAE,CACpFjB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDiB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,OAAO,CAAE1B,eAAe,CAAC0B,OAAO,CAChCjB,MAAM,CAAET,eAAe,CAACS,MAC1B,CAAC,CACH,CAAC,CAAC,CAEF,GAAIN,QAAQ,CAACO,EAAE,CAAE,CACf;AACAf,eAAe,CAAEgC,gBAAgB,EAC/BA,gBAAgB,CAACC,GAAG,CAAEb,WAAW,EAC/BA,WAAW,CAACO,cAAc,GAAKtB,eAAe,CAACsB,cAAc,CACzDtB,eAAe,CACfe,WACN,CACF,CAAC,CACDd,kBAAkB,CAAC,IAAI,CAAC,CAAE;AAC5B,CAAC,IAAM,CACL,KAAM,CAAAY,SAAS,CAAG,KAAM,CAAAV,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvCb,QAAQ,CAACc,SAAS,CAACf,KAAK,CAAC,CAC3B,CACF,CAAE,MAAOA,KAAK,CAAE,CACdS,OAAO,CAACT,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CAAE;AACvDC,QAAQ,CAAC,uDAAuD,CAAC,CACnE,CACF,CAAC,CAED,mBACET,KAAA,QAAKuC,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtC1C,IAAA,OAAA0C,QAAA,CAAI,qBAAmB,CAAI,CAAC,CAC3BlC,SAAS,cACRR,IAAA,MAAA0C,QAAA,CAAG,yBAAuB,CAAG,CAAC,CAC5BhC,KAAK,cACPV,IAAA,MAAGyC,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEhC,KAAK,CAAI,CAAC,cAExCR,KAAA,CAAAE,SAAA,EAAAsC,QAAA,EACGpC,YAAY,CAACqC,MAAM,GAAK,CAAC,eAAI3C,IAAA,MAAA0C,QAAA,CAAG,4BAA0B,CAAG,CAAC,cAC/D1C,IAAA,QAAKyC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC/BpC,YAAY,CAACkC,GAAG,CAAEb,WAAW,eAC5B3B,IAAA,QAAsCyC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC/D9B,eAAe,EAAIA,eAAe,CAACsB,cAAc,GAAKP,WAAW,CAACO,cAAc,cAC/EhC,KAAA,CAAAE,SAAA,EAAAsC,QAAA,eACE1C,IAAA,UAAA0C,QAAA,CAAO,WAAS,CAAO,CAAC,cACxB1C,IAAA,UAAO4C,IAAI,CAAC,MAAM,CAACb,KAAK,CAAEJ,WAAW,CAACkB,QAAS,CAACC,QAAQ,MAAE,CAAC,cAE3D9C,IAAA,UAAA0C,QAAA,CAAO,UAAQ,CAAO,CAAC,cACvB1C,IAAA,UACE4C,IAAI,CAAC,MAAM,CACXd,IAAI,CAAC,SAAS,CACdC,KAAK,CAAEnB,eAAe,CAAC0B,OAAQ,CAC/BS,QAAQ,CAAEnB,iBAAkB,CAC7B,CAAC,cAEF5B,IAAA,UAAA0C,QAAA,CAAO,SAAO,CAAO,CAAC,cACtBxC,KAAA,WACE4B,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAEnB,eAAe,CAACS,MAAO,CAC9B0B,QAAQ,CAAEnB,iBAAkB,CAAAc,QAAA,eAE5B1C,IAAA,WAAQ+B,KAAK,CAAC,QAAQ,CAAAW,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtC1C,IAAA,WAAQ+B,KAAK,CAAC,UAAU,CAAAW,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACpC,CAAC,cAET1C,IAAA,WAAQgD,OAAO,CAAEf,eAAgB,CAAAS,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC/C,CAAC,cAEHxC,KAAA,CAAAE,SAAA,EAAAsC,QAAA,eACExC,KAAA,MAAAwC,QAAA,eACE1C,IAAA,WAAA0C,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAACf,WAAW,CAACkB,QAAQ,EAC/C,CAAC,cACJ3C,KAAA,MAAAwC,QAAA,eACE1C,IAAA,WAAA0C,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAACf,WAAW,CAACW,OAAO,EAC7C,CAAC,cACJpC,KAAA,MAAAwC,QAAA,eACE1C,IAAA,WAAA0C,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAACf,WAAW,CAACN,MAAM,EAC3C,CAAC,cACJrB,IAAA,WAAQgD,OAAO,CAAEA,CAAA,GAAMtB,eAAe,CAACC,WAAW,CAAE,CAAAe,QAAA,CAAC,MAAI,CAAQ,CAAC,EAClE,CACH,EAvCOf,WAAW,CAACO,cAwCjB,CACN,CAAC,CACC,CAAC,EACN,CACH,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA7B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}