{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./ManageEventsPage.css';import AdminHeader from'./AdminHeader';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ManageEventsPage=()=>{const[events,setEvents]=useState([]);const[selectedEventId,setSelectedEventId]=useState(null);const[reason,setReason]=useState('');useEffect(()=>{fetchEvents();},[]);const fetchEvents=async()=>{try{const token=localStorage.getItem('jwt_token');const response=await fetch('/api/admin/events',{headers:{'Authorization':`Bearer ${token}`}});if(response.ok){const data=await response.json();setEvents(data);}else{console.error('Failed to fetch events');}}catch(error){console.error('Error fetching events:',error);}};const updateEventStatus=async(eventId,status)=>{const payload={status};if(status==='Rejected'&&reason){payload.reason=reason;}try{const token=localStorage.getItem('jwt_token');const response=await fetch(`/admin/event/update-status/${eventId}`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify(payload)});if(response.ok){fetchEvents();}else{const data=await response.json();console.error('Error updating event status:',data);alert(`Failed to update event status: ${data.error}`);}}catch(error){console.error('Error updating event status:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"manage-events-page\",children:[/*#__PURE__*/_jsx(AdminHeader,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Events\"}),/*#__PURE__*/_jsx(\"div\",{className:\"event-cards-container\",children:events.map(event=>/*#__PURE__*/_jsxs(\"div\",{className:\"event-card\",children:[/*#__PURE__*/_jsx(\"img\",{src:`/event_images/${event.event_poster}`,alt:event.event_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"event-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:event.event_name}),/*#__PURE__*/_jsx(\"p\",{children:event.event_description}),/*#__PURE__*/_jsx(\"p\",{children:event.event_location}),/*#__PURE__*/_jsx(\"p\",{children:event.event_date}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",event.event_status]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateEventStatus(event.event_id,'Approved'),children:\"Approve\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedEventId(event.event_id),children:\"Reject\"})]})]})]},event.event_id))}),selectedEventId&&/*#__PURE__*/_jsxs(\"div\",{className:\"reject-reason-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Reason for rejection:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:reason,onChange:e=>setReason(e.target.value),placeholder:\"State the reason for rejection\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{updateEventStatus(selectedEventId,'Rejected');setSelectedEventId(null);// Close the reason box after submitting\nsetReason('');},children:\"Submit Rejection\"})]})]});};export default ManageEventsPage;","map":{"version":3,"names":["React","useState","useEffect","AdminHeader","jsx","_jsx","jsxs","_jsxs","ManageEventsPage","events","setEvents","selectedEventId","setSelectedEventId","reason","setReason","fetchEvents","token","localStorage","getItem","response","fetch","headers","ok","data","json","console","error","updateEventStatus","eventId","status","payload","method","body","JSON","stringify","alert","className","children","map","event","src","event_poster","alt","event_name","event_description","event_location","event_date","event_status","onClick","event_id","value","onChange","e","target","placeholder"],"sources":["C:/Users/Rindella Nhavoto/Desktop/ProjectsVSC/SWEproject/EventsGit/DLMCSPSE01_Rindella_Nhavoto_9222794/events-system-frontend/src/components/ManageEventsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ManageEventsPage.css';\r\nimport AdminHeader from './AdminHeader';\r\n\r\nconst ManageEventsPage = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedEventId, setSelectedEventId] = useState(null);\r\n    const [reason, setReason] = useState(''); \r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    const fetchEvents = async () => {\r\n        try {\r\n            const token = localStorage.getItem('jwt_token'); \r\n            const response = await fetch('/api/admin/events', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setEvents(data);\r\n            } else {\r\n                console.error('Failed to fetch events');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching events:', error);\r\n        }\r\n    };\r\n\r\n    const updateEventStatus = async (eventId, status) => {\r\n        const payload = { status };\r\n        \r\n        if (status === 'Rejected' && reason) {\r\n            payload.reason = reason;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem('jwt_token'); \r\n            const response = await fetch(`/admin/event/update-status/${eventId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n            if (response.ok) {\r\n                fetchEvents(); \r\n            } else {\r\n                const data = await response.json();\r\n                console.error('Error updating event status:', data);\r\n                alert(`Failed to update event status: ${data.error}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating event status:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"manage-events-page\">\r\n            <AdminHeader />\r\n            <h2>Manage Events</h2>\r\n            <div className=\"event-cards-container\">\r\n                {events.map((event) => (\r\n                    <div key={event.event_id} className=\"event-card\">\r\n                        <img src={`/event_images/${event.event_poster}`} alt={event.event_name} />\r\n                        <div className=\"event-info\">\r\n                            <h3>{event.event_name}</h3>\r\n                            <p>{event.event_description}</p>\r\n                            <p>{event.event_location}</p>\r\n                            <p>{event.event_date}</p>\r\n                            <p>Status: {event.event_status}</p>\r\n                            <div className=\"action-buttons\">\r\n                                <button onClick={() => updateEventStatus(event.event_id, 'Approved')}>\r\n                                    Approve\r\n                                </button>\r\n                                <button onClick={() => setSelectedEventId(event.event_id)}>\r\n                                    Reject\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {selectedEventId && (\r\n                <div className=\"reject-reason-container\">\r\n                    <h3>Reason for rejection:</h3>\r\n                    <textarea\r\n                        value={reason}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                        placeholder=\"State the reason for rejection\"\r\n                    />\r\n                    <button\r\n                        onClick={() => {\r\n                            updateEventStatus(selectedEventId, 'Rejected');\r\n                            setSelectedEventId(null); // Close the reason box after submitting\r\n                            setReason('');\r\n                        }}\r\n                    >\r\n                        Submit Rejection\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageEventsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}