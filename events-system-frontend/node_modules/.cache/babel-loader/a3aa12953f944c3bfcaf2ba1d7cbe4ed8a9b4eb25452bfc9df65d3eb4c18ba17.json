{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import{loadStripe}from'@stripe/stripe-js';import{Elements}from'@stripe/react-stripe-js';import CheckoutForm from'./CheckoutForm';import'./LandingPage.css';// Initialize Stripe with your test public key\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const stripePromise=loadStripe('sk_test_123pol');const LandingPage=()=>{var _location$state;const navigate=useNavigate();const location=useLocation();const username=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username)||'Guest';const[countries,setCountries]=useState([]);const[locations,setLocations]=useState([]);const[categories,setCategories]=useState([]);const[selectedCountry,setSelectedCountry]=useState('');const[selectedLocation,setSelectedLocation]=useState('');const[selectedCategory,setSelectedCategory]=useState('');const[events,setEvents]=useState([]);const[flippedEvents,setFlippedEvents]=useState({});const[selectedEvent,setSelectedEvent]=useState(null);const[likedEvents,setLikedEvents]=useState({});// Fetch the list of countries from the server\nuseEffect(()=>{const fetchCountries=async()=>{try{const response=await fetch('/events/countries');const data=await response.json();setCountries(data);}catch(error){console.error('Error fetching countries:',error);}};fetchCountries();},[]);useEffect(()=>{// Fetch the list of locations and categories based on selected country\nconst fetchFilters=async()=>{if(selectedCountry){try{const response=await fetch(`/events/filters?country=${selectedCountry}`);const data=await response.json();setLocations(data.locations);setCategories(data.categories);}catch(error){console.error('Error fetching filters:',error);}}};fetchFilters();},[selectedCountry]);useEffect(()=>{const fetchEvents=async()=>{if(selectedCountry){try{const url=`/events?country=${selectedCountry}&location=${selectedLocation}&category=${selectedCategory}&status=Approved`;const response=await fetch(url);const data=await response.json();// Get current date and filter events whose date is in the future\nconst currentDate=new Date();const upcomingEvents=data.filter(event=>new Date(event.event_date)>currentDate);setEvents(upcomingEvents);}catch(error){console.error('Error fetching events:',error);}}};fetchEvents();},[selectedCountry,selectedLocation,selectedCategory]);const handleEventClick=(e,event_id)=>{if(e.target.classList.contains('booking-dropdown')||e.target.classList.contains('proceed-button')||e.target.classList.contains('like-button')||e.target.classList.contains('settings-dropdown')){return;}setFlippedEvents(prev=>({...prev,[event_id]:!prev[event_id]}));};const handlePaymentMethodChange=(event,paymentMethod)=>{setSelectedEvent(event);if(paymentMethod==='stripe'){navigate(`/checkout`,{state:{event,method:'stripe'}});}else if(paymentMethod==='mpesa'){navigate(`/mpesa-payment`,{state:{event,method:'mpesa'}});}};return/*#__PURE__*/_jsx(\"div\",{className:\"landing-page\",children:events.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"events-container\",children:events.map(event=>/*#__PURE__*/_jsx(\"div\",{className:`event-card ${flippedEvents[event.event_id]?'flipped':''}`,onClick:e=>handleEventClick(e,event.event_id),children:/*#__PURE__*/_jsxs(\"div\",{className:\"event-card-inner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"event-card-front\",children:[/*#__PURE__*/_jsx(\"img\",{src:`/event_images/${event.event_poster}`,alt:event.event_name,className:\"event-poster\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"event-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:event.event_name}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",new Date(event.event_date).toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Location:\"}),\" \",event.event_location]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"event-card-back\",children:[/*#__PURE__*/_jsx(\"h3\",{children:event.event_name}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Description:\"}),\" \",event.event_description]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Price:\"}),\" $\",event.event_price]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tickets Remaining:\"}),\" \",event.event_capacity,\" tickets\"]}),/*#__PURE__*/_jsxs(\"select\",{className:\"booking-dropdown\",onClick:e=>e.stopPropagation(),onChange:e=>handlePaymentMethodChange(event,e.target.value),defaultValue:\"\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Buy Tickets\"}),/*#__PURE__*/_jsx(\"option\",{value:\"stripe\",children:\"Card Payment\"}),/*#__PURE__*/_jsx(\"option\",{value:\"mpesa\",children:\"M-Pesa\"})]})]})]})},event.event_id))}):selectedCountry&&/*#__PURE__*/_jsx(\"p\",{children:\"No approved events available for the selected filters.\"})});};export default LandingPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","loadStripe","Elements","CheckoutForm","jsx","_jsx","jsxs","_jsxs","stripePromise","LandingPage","_location$state","navigate","location","username","state","countries","setCountries","locations","setLocations","categories","setCategories","selectedCountry","setSelectedCountry","selectedLocation","setSelectedLocation","selectedCategory","setSelectedCategory","events","setEvents","flippedEvents","setFlippedEvents","selectedEvent","setSelectedEvent","likedEvents","setLikedEvents","fetchCountries","response","fetch","data","json","error","console","fetchFilters","fetchEvents","url","currentDate","Date","upcomingEvents","filter","event","event_date","handleEventClick","e","event_id","target","classList","contains","prev","handlePaymentMethodChange","paymentMethod","method","className","children","length","map","onClick","src","event_poster","alt","event_name","toLocaleString","event_location","event_description","event_price","event_capacity","stopPropagation","onChange","value","defaultValue","disabled"],"sources":["C:/Users/Rindella Nhavoto/Desktop/ProjectsVSC/SWEproject/events-system-frontend/src/components/LandingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport './LandingPage.css';\r\n\r\n// Initialize Stripe with your test public key\r\nconst stripePromise = loadStripe('sk_test_123pol');\r\n\r\nconst LandingPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const username = location.state?.username || 'Guest';\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  const [locations, setLocations] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedLocation, setSelectedLocation] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [events, setEvents] = useState([]);\r\n  const [flippedEvents, setFlippedEvents] = useState({});\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [likedEvents, setLikedEvents] = useState({});\r\n\r\n  // Fetch the list of countries from the server\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const response = await fetch('/events/countries');\r\n        const data = await response.json();\r\n        setCountries(data);\r\n      } catch (error) {\r\n        console.error('Error fetching countries:', error);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of locations and categories based on selected country\r\n    const fetchFilters = async () => {\r\n      if (selectedCountry) {\r\n        try {\r\n          const response = await fetch(`/events/filters?country=${selectedCountry}`);\r\n          const data = await response.json();\r\n          setLocations(data.locations);\r\n          setCategories(data.categories);\r\n        } catch (error) {\r\n          console.error('Error fetching filters:', error);\r\n        }\r\n      }\r\n    };\r\n  \r\n    fetchFilters();\r\n  }, [selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      if (selectedCountry) {\r\n        try {\r\n          const url = `/events?country=${selectedCountry}&location=${selectedLocation}&category=${selectedCategory}&status=Approved`;\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n\r\n          // Get current date and filter events whose date is in the future\r\n          const currentDate = new Date();\r\n          const upcomingEvents = data.filter(event => new Date(event.event_date) > currentDate);\r\n\r\n          setEvents(upcomingEvents);\r\n        } catch (error) {\r\n          console.error('Error fetching events:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, [selectedCountry, selectedLocation, selectedCategory]);\r\n\r\n  const handleEventClick = (e, event_id) => {\r\n    if (e.target.classList.contains('booking-dropdown') || e.target.classList.contains('proceed-button') || e.target.classList.contains('like-button') || e.target.classList.contains('settings-dropdown')) {\r\n      return;\r\n    }\r\n\r\n    setFlippedEvents((prev) => ({\r\n      ...prev,\r\n      [event_id]: !prev[event_id],\r\n    }));\r\n  };\r\n\r\n  const handlePaymentMethodChange = (event, paymentMethod) => {\r\n    setSelectedEvent(event);\r\n    if (paymentMethod === 'stripe') {\r\n      navigate(`/checkout`, { state: { event, method: 'stripe' } });\r\n    } else if (paymentMethod === 'mpesa') {\r\n      navigate(`/mpesa-payment`, { state: { event, method: 'mpesa' } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"landing-page\">\r\n      {/* Existing elements for rendering countries, categories, etc. */}\r\n      \r\n      {events.length > 0 ? (\r\n        <div className=\"events-container\">\r\n          {events.map((event) => (\r\n            <div\r\n              key={event.event_id}\r\n              className={`event-card ${flippedEvents[event.event_id] ? 'flipped' : ''}`}\r\n              onClick={(e) => handleEventClick(e, event.event_id)}\r\n            >\r\n              <div className=\"event-card-inner\">\r\n                {/* Front of the card */}\r\n                <div className=\"event-card-front\">\r\n                  <img\r\n                    src={`/event_images/${event.event_poster}`}\r\n                    alt={event.event_name}\r\n                    className=\"event-poster\"\r\n                  />\r\n                  <div className=\"event-details\">\r\n                    <h3>{event.event_name}</h3>\r\n                    <p><strong>Date:</strong> {new Date(event.event_date).toLocaleString()}</p>\r\n                    <p><strong>Location:</strong> {event.event_location}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Back of the card */}\r\n                <div className=\"event-card-back\">\r\n                  <h3>{event.event_name}</h3>\r\n                  <p><strong>Description:</strong> {event.event_description}</p>\r\n                  <p><strong>Price:</strong> ${event.event_price}</p>\r\n                  <p><strong>Tickets Remaining:</strong> {event.event_capacity} tickets</p>\r\n\r\n                  {/* Book Tickets Dropdown */}\r\n                  <select\r\n                    className=\"booking-dropdown\"\r\n                    onClick={(e) => e.stopPropagation()}\r\n                    onChange={(e) => handlePaymentMethodChange(event, e.target.value)}\r\n                    defaultValue=\"\"\r\n                  >\r\n                    <option value=\"\" disabled>Buy Tickets</option>\r\n                    <option value=\"stripe\">Card Payment</option>\r\n                    <option value=\"mpesa\">M-Pesa</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        selectedCountry && <p>No approved events available for the selected filters.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}